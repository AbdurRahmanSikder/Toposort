#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
void __print(int x) { cerr << x; }
void __print(long x) { cerr << x; }
void __print(long long x) { cerr << x; }
void __print(unsigned x) { cerr << x; }
void __print(unsigned long x) { cerr << x; }
void __print(unsigned long long x) { cerr << x; }
void __print(float x) { cerr << x; }
void __print(double x) { cerr << x; }
void __print(long double x) { cerr << x; }
void __print(char x) { cerr << '\'' << x << '\''; }
void __print(const char *x) { cerr << '\"' << x << '\"'; }
void __print(const string &x) { cerr << '\"' << x << '\"'; }
void __print(bool x) { cerr << (x ? "true" : "false"); }

template <typename T, typename V>
void __print(const pair<T, V> &x)
{
    cerr << '{';
    __print(x.first);
    cerr << ',';
    __print(x.second);
    cerr << '}';
}
template <typename T>
void __print(const T &x)
{
    int f = 0;
    cerr << '{';
    for (auto &i : x)
        cerr << (f++ ? "," : ""), __print(i);
    cerr << "}";
}
void _print() { cerr << "]\n"; }
template <typename T, typename... V>
void _print(T t, V... v)
{
    __print(t);
    if (sizeof...(v))
        cerr << ", ";
    _print(v...);
}
#ifndef ONLINE_JUDGE
#define debug(x...)               \
    cerr << "[" << #x << "] = ["; \
    _print(x)
#else
#define debug(x...)
#endif
#define IOS                  \
    ios::sync_with_stdio(0); \
    cin.tie(0);              \
    cout.tie(0);
#define endl "\n"
#define YES printf("YES\n")
#define NO printf("NO\n")
#define YES printf("YES\n")
#define NO printf("NO\n")
#define NOo printf("-1\n")
#define srt(x) sort(x.begin(), x.end())
#define rsrt(x) sort(x.rbegin(), x.rend())
#define ull unsigned long long
#define ll long long
#define pb push_back
#define ff first
#define ss second
#define all(x) x.begin(), x.end()
#define pii pair<int, int>
#define piii pair<int, pii>
#define min_heap priority_queue<int, vector<int>, greater<int>>
const ll mod = 1000000007;
const ll inf = 1e9;
const ll N = 10000007;
#define vll vector<long long>
#define mll map<long long, long long>
ll maxn = 100005;
struct edge
{
    ll u, v, wt;
};
vector<edge> graph;
vector<vll> virtual_graph;
vector<bool> vis;
vector<ll> st;
void toposort(ll node)
{
    vis[node] = 1;
    for (auto it : virtual_graph[node])
        if (!vis[it])
            toposort(it);
    st.push_back(node);
}
void missedcall(ll node)
{
    st.clear();
    vis.assign(node + 1, 0);
    for (ll i = 1; i <= node; i++)
        if (!vis[i])
            toposort(i);
    vis.assign(node + 1, 0);
    reverse(st.begin(), st.end());
}
void dfs(ll node)
{
    vis[node] = 1;
    for (auto it : virtual_graph[node])
        if (!vis[it])
            dfs(it);
}
bool check(ll weight, ll node)
{
    virtual_graph.assign(node + 1, {});
    for (auto [u, v, w] : graph)
    {
        if (w <= weight)
        {
            virtual_graph[u].push_back(v);
        }
    }
    missedcall(node);
    dfs(st[0]);
    virtual_graph.clear();
    for (ll i = 1; i <= node; i++)
        if (!vis[i])
            return false;

    return true;
}
void binarysearch(ll node)
{
    ll maxn = 1e9 + 10;
    ll ans, l = -1, r = maxn, mid;
    while (l <= r)
    {
        mid = (l + r) / 2;
        if (check(mid, node))
        {
            ans = mid;
            r = mid - 1;
        }
        else
            l = mid + 1;
        // cout<<mid<<endl;
    }
    r >= maxn ? cout << -1 << endl : cout << ans << endl;
}
void solve()
{
    ll e, a, b, n, m, i, wt;
    graph.clear();
    cin >> n >> e;
    for (i = 1; i <= e; i++)
    {
        cin >> a >> b >> wt;
        graph.push_back({a, b, 0});
        graph.push_back({b, a, wt});
    }
    binarysearch(n);
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    ll t = 1;
    cin >> t;
    while (t--)
    {
        solve();
    }
}
